%{
#include <stdio.h>
#include <math.h>
%}

%token IDENTIFIER NUMBER

%%

input: assignment { printf("Result: %f\n", $1); }
;

assignment: IDENTIFIER '=' expr { $$ = $3; }
;

expr: expr '+' expr { $$ = $1 + $3; }
| expr '-' expr { $$ = $1 - $3; }
| expr '*' expr { $$ = $1 * $3; }
| expr '/' expr { $$ = $1 / $3; }
| function_call { $$ = $1; }
| NUMBER { $$ = $1; }
;

function_call: IDENTIFIER '(' expr_list ')' { $$ = evaluate_function($1, $3); }
;

expr_list: expr
| expr_list ',' expr
;

%%

double evaluate_function(const char* function_name, double* args) {
if (strcmp(function_name, "pow") == 0) {
return pow(args[0], args[1]);
} else if (strcmp(function_name, "log") == 0) {
return log(args[0]);
} else {
printf("Error: Unknown function '%s'\n", function_name);
return 0.0;
}
}

int main() {
yyparse();
return 0;
}
